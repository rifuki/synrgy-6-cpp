Codility is a company that creates programming tasks which are solved by candidates. After submitting their solution to a task, each candidate receives a report containing the number of points their solution scored, which is an integer between 0 and 100.

You are given two tables, tasks and reports, with the following structure:

  create table tasks (
      id integer not null,
      name varchar(40) not null,
      unique(id)
  );

  create table reports (
      id integer not null,
      task_id integer not null,
      candidate varchar(40) not null,
      score integer not null,
      unique(id)
  );
Your task is to write an SQL query which assigns a difficulty rating to each task having at least one solution. The difficulty of the task depends on the average score of all candidates' solutions submitted for this task. It is possible that one candidate have submitted multiple solutions for the same task; in this case, all of those solutions should be included in the average.

There are three difficulties: "Easy", "Medium" and "Hard".

If the average score for the task is lower than or equal to 20, then its difficulty is "Hard".
If the average is higher than 20 but lower than or equal to 60, then its difficulty is "Medium".
If the average is higher than 60, its difficulty is "Easy".
For example, if the average score of the task is 50, then its difficulty is "Medium" because the average score is greater than 20 but less then 60.

Your query should return a table containing three columns: task_id (ID of task), task_name (name of task) and difficulty âˆ’ the difficulty of the task, which is one of three possible strings: "Easy", "Medium" or "Hard". Rows should be ordered by increasing task_id. If no solutions exist for some task, that task should not appear in your table.

Examples:

1. Given:

  tasks:

    id | name
  -----+-------------
   101 | MinDist
   123 | Equi
   142 | Median
   300 | Tricoloring


  reports:

   id | task_id  | candidate         | score
  ----+----------+-------------------+--------
   13 | 101      | John Smith        | 100
   24 | 123      | Delaney Lloyd     | 34
   37 | 300      | Monroe Jimenez    | 50
   49 | 101      | Stanley Price     | 45
   51 | 142      | Tanner Sears      | 37
   68 | 142      | Lara Fraser       | 3
   83 | 300      | Tanner Sears      | 0

your query should return:

    task_id | task_name    | difficulty
   ---------+--------------+------------
        101 | MinDist      | Easy
        123 | Equi         | Medium
        142 | Median       | Hard
        300 | Tricoloring  | Medium
2. Given:

  tasks:

    id | name
   ----+------------------------
     3 | Cake
     6 | GameOfNuts
     7 | CircleIntersectionArea
     9 | JessicaAndBrian
          
          
  reports:
  
    id | task_id | candidate  | score
   ----+---------+------------+--------
     2 | 6       | Paul Sat   | 0
     3 | 3       | Karen M.   | 30
     5 | 3       | Oscar Glad | 10
     7 | 9       | Karen M.   | 60
    11 | 6       | Paul Sat   | 81
    13 | 6       | Paul Sat   | 100

               
your query should return:

    task_id | task_name       | difficulty
   ---------+-----------------+------------
          3 | Cake            | Hard
          6 | GameOfNuts      | Easy
          9 | JessicaAndBrian | Medium
